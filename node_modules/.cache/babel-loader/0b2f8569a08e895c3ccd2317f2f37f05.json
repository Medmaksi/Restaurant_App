{"ast":null,"code":"var _jsxFileName = \"/Users/medmaksi/Restaurant_App/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport ProfilePic from '../assets/profile.jpeg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Image, Container, Col, Row } from \"react-bootstrap\";\nimport NavBar from \"../components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_PROFILE = gql`\nquery{\n  user{\n    addresses{\n    addressLine1\n    }\n    \n    email\n \n\n    firstName\n    lastName\n    mobileNumber\n\n    profilePicture{\n    url\n    }\n    uid\n  }\n}\n`;\n\nconst ProfileScreen = () => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_PROFILE);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"profileContainer\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: data.user.profilePicture ? data.user.profilePicture : ProfilePic,\n            roundedCircle: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [data.user.firstName, \" \", data.user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone: \", data.user.mobileNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Addresses:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: data.user.addresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: address.addressLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileScreen, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/medmaksi/Restaurant_App/src/screens/ProfileScreen.js"],"names":["React","gql","useQuery","ProfilePic","Image","Container","Col","Row","NavBar","GET_PROFILE","ProfileScreen","loading","data","console","log","user","profilePicture","firstName","lastName","email","mobileNumber","addresses","map","address","addressLine1"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,sCAAP;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,iBAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAGR,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;;AAsBA,MAAMS,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBV,QAAQ,CAACO,WAAD,CAAlC;;AAEA,MAAGE,OAAH,EAAY;AACR,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,kBAArB;AAAA,6BACQ,QAAC,GAAD;AAAA,gCACG,QAAC,GAAD;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAEA,IAAI,CAACG,IAAL,CAAUC,cAAV,GAA2BJ,IAAI,CAACG,IAAL,CAAUC,cAArC,GAAsDb,UAAlE;AAA8E,YAAA,aAAa;AAA3F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH,eAII,QAAC,GAAD;AAAA,kCACI;AAAA,uBAAKS,IAAI,CAACG,IAAL,CAAUE,SAAf,OAA2BL,IAAI,CAACG,IAAL,CAAUG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIN,IAAI,CAACG,IAAL,CAAUI;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,kCAAWP,IAAI,CAACG,IAAL,CAAUK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eASI,QAAC,GAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBACKR,IAAI,CAACG,IAAL,CAAUM,SAAV,CAAoBC,GAApB,CAAyBC,OAAD,iBACrB;AAAA,wBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CApCD;;GAAMd,a;UAEwBR,Q;;;KAFxBQ,a;AAqCN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport ProfilePic from '../assets/profile.jpeg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Image, Container, Col, Row} from \"react-bootstrap\";\nimport NavBar from \"../components/NavBar\";\n\nconst GET_PROFILE = gql`\nquery{\n  user{\n    addresses{\n    addressLine1\n    }\n    \n    email\n \n\n    firstName\n    lastName\n    mobileNumber\n\n    profilePicture{\n    url\n    }\n    uid\n  }\n}\n`;\n\nconst ProfileScreen = () => {\n\n    const { loading, data } = useQuery(GET_PROFILE);\n\n    if(loading) {\n        return(\n            <p>Loading...</p>\n        )\n    }\n\n    console.log(data);\n    return(\n        <div>\n            <NavBar/>\n            <Container className=\"profileContainer\">\n                    <Row>\n                       <Col>\n                           <Image src={data.user.profilePicture ? data.user.profilePicture : ProfilePic} roundedCircle />\n                       </Col>\n                        <Col>\n                            <h2>{data.user.firstName} {data.user.lastName}</h2>\n                            <p>{data.user.email}</p>\n                            <p>Phone: {data.user.mobileNumber}</p>\n                        </Col>\n                        <Col>\n                            <p>Addresses:</p>\n                            <ul>\n                                {data.user.addresses.map((address) => (\n                                    <li>{address.addressLine1}</li>\n                                ))}\n                            </ul>\n                        </Col>\n                    </Row>\n            </Container>\n        </div>\n    )\n}\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}