{"ast":null,"code":"var _jsxFileName = \"/Users/medmaksi/restaurantx/src/screens/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useMutation } from '@apollo/client';\nimport { Form, Button } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/LoginStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation(\n    $email: String!\n    $password: String!\n  ) {\n    loginWithEmail(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst LoginScreen = () => {\n  _s();\n\n  const [hidePass, setHidePass] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const [login] = useMutation(LOGIN_MUTATION, {\n    variables: {\n      email: email,\n      password: password\n    },\n    onCompleted: login => {\n      cookies.set('token', login.loginWithEmail.token);\n      console.log(login);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          onChange: event => setEmail(event.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: event => setPassword(event.target.value),\n          type: hidePass ? \"password\" : \"text\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          e.preventDefault();\n          login().then(result => {\n            history.push({\n              pathname: '/list'\n            });\n          });\n        },\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginScreen, \"WdjbqKhpqEv39y9idQZQuTLEzJg=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/Users/medmaksi/restaurantx/src/screens/LoginScreen.js"],"names":["React","useState","gql","useMutation","Form","Button","useHistory","Cookies","cookies","LOGIN_MUTATION","LoginScreen","hidePass","setHidePass","email","setEmail","password","setPassword","history","login","variables","onCompleted","set","loginWithEmail","token","console","log","event","target","value","e","preventDefault","then","result","push","pathname"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { gql, useMutation } from '@apollo/client';\nimport {Form, Button} from 'react-bootstrap';\nimport {useHistory} from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/LoginStyle.css';\n\nconst cookies = new Cookies();\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation(\n    $email: String!\n    $password: String!\n  ) {\n    loginWithEmail(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst LoginScreen = () => {\n    const [hidePass, setHidePass] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const [login] = useMutation(LOGIN_MUTATION, {\n        variables: {\n            email: email,\n            password: password\n        },\n        onCompleted: (login) => {\n            cookies.set('token', login.loginWithEmail.token);\n            console.log(login);\n        }\n    });\n\n    return(\n        <div className=\"container\">\n            <Form className=\"form\">\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" onChange={(event) => setEmail(event.target.value)} placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control onChange={(event) => setPassword(event.target.value)} type={hidePass ? \"password\" : \"text\"} placeholder=\"Password\" />\n                </Form.Group>\n                <Button onClick={(e) => {\n                    e.preventDefault();\n                    login().then((result) => {\n                        history.push({\n                            pathname: '/list',\n                        })\n                    });\n                }} variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}